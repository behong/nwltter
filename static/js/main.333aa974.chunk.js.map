{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","prev","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuid4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","refreshUser","histoy","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.333aa974.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n\r\n  export const dbService = firebase.firestore();\r\n\r\n  export const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) =>{\r\n        //console.log(event.target.name);\r\n        const {target :{name,value}} =event;\r\n        if(name===\"email\"){\r\n            setEmail(value)\r\n        }else if(name ===\"password\"){\r\n            setPassword(value)\r\n        }\r\n    };\r\n    const onSubmit = async(event) =>{\r\n        // javascript  에게 내가 제어 할꺼니까 아무것도 하지마..\r\n        // 라는 옵션이  preventDefault\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                //신규 계정 생성 create account\r\n                data = await authService.createUserWithEmailAndPassword(email,password)\r\n            }else{\r\n                // log In\r\n                data = await  authService.signInWithEmailAndPassword(email,password)\r\n            }\r\n            //console.log(data);\r\n        }catch(error){\r\n            setError(error);\r\n        }\r\n    };\r\n    // 전 setNewAccount 데이터\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) =>{\r\n        //console.log(event.target.name);\r\n        const { target:{name} , } = event;\r\n        let provider\r\n        if(name ==='google'){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name==='github'){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        //console.log(data);\r\n    }\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />            \r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n                <input type=\"submit\" value={newAccount ?'create new Account' : 'Log In'} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount?\"Sign In\":\"Create Account\"}</span>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\"  className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button onClick={onSocialClick} name=\"github\"  className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>        \r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj , isOwner}) =>{\r\n    const [editing,setEditing] =useState(false);\r\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\r\n        // delete nweet\r\n        if(ok){\r\n            //console.log(`nweets/${nweetObj.id}`);\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            //파일 삭제\r\n            await storageService.refFromURL(`${nweetObj.attachmentUrl}`).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    //console.log({editing});\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //await console.log(nweetObj,newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) =>{\r\n        const{\r\n            target : {value} ,\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? \r\n                (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type='text' \r\n                    placeholder='Edit your Nweet' \r\n                    value={newNweet}\r\n                    required\r\n                    autoFocus\r\n                    onChange={onChange} \r\n                    className=\"formInput\"\r\n                    />\r\n                    <input type='submit' value='Update Nweet' className=\"formBtn\"/>\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>                \r\n                </>\r\n                )\r\n            :\r\n                (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                     <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>                         \r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n                </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from \"fbase\";\r\nimport {v4 as uuid4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet,setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }        \r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if( attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuid4()}`);\r\n            const response = await attachmentRef.putString(attachment,'data_url');\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await dbService.collection('nweets').add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const{\r\n            target :{value}\r\n            ,} = event;\r\n            setNweet(value);\r\n    };\r\n    const onFileChange = (event) =>{\r\n        //console.log(event.target.files)\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        //파일 읽는 이벤트가 끝날때...\r\n        reader.onloadend = (finishedEvent) =>{\r\n            const{\r\n                currentTarget :{result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachmentClick = () => setAttachment(\"\");\r\n\r\n    return(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n            <input onChange={onChange}  value={nweet} type='text' placeholder=\"what's on your mind\" maxLength={120} className=\"factoryInput__input\" /> \r\n            <input type='submit' value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>     \r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{ opacity: 0,}}\r\n        />\t                       \r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n                <img src={attachment}  style={{ backgroundImage: attachment,}} />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n                <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>  \r\n            </div>\r\n            )\r\n        }\r\n    </form>        \r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets,setNweets] = useState([]);\r\n    useEffect (() =>{\r\n        //  읽어오는 다른 방법 .. 실시간 으로 데이터 읽어오기 onSnapshot\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) =>{\r\n            const nweetArray = snapshot.docs.map((doc)=>({\r\n                id : doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            //console.log(nweetArray);\r\n            setNweets(nweetArray);\r\n        });\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n \r\nexport default ({refreshUser, userObj }) => {\r\n    const histoy = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        histoy.push('/');\r\n    };\r\n\r\n    const onChange = (event) =>{\r\n        const{\r\n            target:{ value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({\r\n            displayName: newDisplayName,\r\n          });\r\n          refreshUser();\r\n        }\r\n      };    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input type=\"text\" autoFocus placeholder=\"Display Name\" onChange={onChange}  value={newDisplayName} className=\"formInput\"/>\r\n            <input type=\"submit\" value=\"upload Profile\" className=\"formInput\"  style={{marginTop: 10,}} />\r\n        </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log out</span>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>        \r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router,Route,Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? ( \r\n                <div\r\n                    style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>    \r\n                </div> \r\n                ) : \r\n                (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj,setUserObject] = useState(null);\n\n  useEffect(()=>{\n    authService.onAuthStateChanged( (user) => {\n      if(user){\n        setUserObject({\n          displayName : user.displayName,\n          uid: user.uid,\n          updateProfile:(args) => user.updateProfile(args) ,\n        });\n      }else{\n        setUserObject(null);\n      }\n      setInit(true);\n    })\n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject({\n      displayName : user.displayName,\n      uid:user.uid,\n      updateProfile:(args) => user.updateProfile(args) ,\n    });\n  };\n  return (\n    <>\n    {init ? (\n      <AppRouter \n        refreshUser={refreshUser} \n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} /> \n    ): (\n      'Initializing....'\n    )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}